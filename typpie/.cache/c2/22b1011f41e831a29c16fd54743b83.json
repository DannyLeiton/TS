{"id":"src/index.ts","dependencies":[{"name":"/Users/daniel/Documents/Q8Pass/Learning/TS/typpie/package.json","includedInParent":true,"mtime":1676929622500},{"name":"./models/User","loc":{"line":6,"column":21,"index":253},"parent":"/Users/daniel/Documents/Q8Pass/Learning/TS/typpie/src/index.ts","resolved":"/Users/daniel/Documents/Q8Pass/Learning/TS/typpie/src/models/User.ts"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconsole.log('This is Typpie, a Typed Web Framework!');\n// import axios, { AxiosResponse } from 'axios';\n//import { Collection } from \"./models/Collection\"\nvar User_1 = require(\"./models/User\");\n/* First approach:\nconst user = new User({ name: 'Fulanito', age: 35});\n\nconsole.info(`User Props: ${user.get('name')}, ${user.get('age')}`);\n\nuser.set({ name: \"Fulanito D'tal\" })\n\nconsole.info(`New User Props: ${user.get('name')}, ${user.get('age')}`);\n\nconst userEmpty = new User({});\n\nconsole.info(`New Empty User Props: ${userEmpty.get('name')}, ${userEmpty.get('age')}`);\n*/\n/*\n-----------------------------------------------------------------\nDoesn't work this way after separating the events to a diff class.\nNow requires user.events.on / .trigger check line: 70.\n-----------------------------------------------------------------\nuser.on('change', () => {\n  console.log('change 0');\n});\nuser.on('change', () => {\n  console.log('change 1');\n});\nuser.on('otherEvent', () => {\n  console.log('otherEvent 0');\n});\n\nuser.trigger('change');\n\nconsole.log(user);\n\nuser.trigger('otherEvent');\n*/\n// Install > npm install -g json-server\n// Create and fill file: db.json\n// > json-server -w db.json\n// > npm install axios\n/* Examples after installing json-server.\naxios.post('http://localhost:3000/users', {\n  name: 'Nolito',\n  age: 50\n});\n\nconst jsonUser = new User({ id: 19 });\n \njsonUser.fetch();\n\nsetTimeout(() => {\n  console.log(jsonUser);\n}, 1000);\n*/\n/*let marito = {};\naxios.get('http://localhost:3000/users/1').then(user => marito=user);\nconsole.log(marito);*/\n/* Before Async and Attributes refactoring:\nconst oldUser = new User({ id: 1 });\noldUser.set({ name: 'Otro won', age: 40 })\noldUser.save();\n\nconst newUser = new User({});\nnewUser.set({ name: 'New won', age: 44 })\nnewUser.save();\n\nnewUser.events.on('change', () => {\n  console.log('change 0');\n});\n\nnewUser.events.on('change', () => {\n  console.log('change 1');\n});\n\nnewUser.events.trigger('change');\n*/\n/* FW v2\n\nconst user = new User ({ name: 'Perensejo', age: 0 })\n\nWaay 2 complex:\nuser.sync.save({ name: user.attributes.get('name'), age: user.attributes.get('age')});\n*/\n/*\nconst user = new User ({ age: 40 })\n\nuser.on('change', () => {\n  console.log(user)\n});\n\nuser.set({ name: 'Lemita' });*/\n/*\nconst user = new User ({ id: 1, name: 'New Name', age: 5 })\n\nuser.on('save', () => {\n  console.log(user)\n});\n\nuser.save();*/\n/*\nconst user = User.buildUser({ id: 3 });\n\nuser.on('change', () => {\n  console.log(user);\n});\n\nuser.fetch();\n*/\nvar url = 'http://localhost:3000/users';\n/*const collection = new Collection<User, UserProps>(\n  url,\n  (json: UserProps) => User.(json)\n);*/\nvar collection = User_1.User.buildUserCollection();\ncollection.on('change', function () {\n  console.log(collection);\n});\ncollection.fetch();"},"sourceMaps":{"js":{"mappings":[{"source":"src/index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":1,"column":7},"generated":{"line":6,"column":7}},{"source":"src/index.ts","name":null,"original":{"line":1,"column":8},"generated":{"line":6,"column":8}},{"source":"src/index.ts","name":null,"original":{"line":1,"column":11},"generated":{"line":6,"column":11}},{"source":"src/index.ts","name":null,"original":{"line":1,"column":12},"generated":{"line":6,"column":12}},{"source":"src/index.ts","name":null,"original":{"line":1,"column":52},"generated":{"line":6,"column":52}},{"source":"src/index.ts","name":null,"original":{"line":1,"column":53},"generated":{"line":6,"column":53}},{"source":"src/index.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":8,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":9,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":9,"column":4}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":9,"column":10}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":9,"column":13}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":9,"column":20}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":9,"column":21}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":9,"column":36}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":9,"column":37}},{"source":"src/index.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":10,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":23,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":85,"column":0},"generated":{"line":84,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":92,"column":0},"generated":{"line":91,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":100,"column":0},"generated":{"line":99,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":108,"column":0},"generated":{"line":107,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":118,"column":0},"generated":{"line":116,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":118,"column":6},"generated":{"line":116,"column":4}},{"source":"src/index.ts","name":null,"original":{"line":118,"column":9},"generated":{"line":116,"column":7}},{"source":"src/index.ts","name":null,"original":{"line":118,"column":12},"generated":{"line":116,"column":10}},{"source":"src/index.ts","name":null,"original":{"line":118,"column":41},"generated":{"line":116,"column":39}},{"source":"src/index.ts","name":null,"original":{"line":120,"column":0},"generated":{"line":117,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":125,"column":0},"generated":{"line":121,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":125,"column":6},"generated":{"line":121,"column":4}},{"source":"src/index.ts","name":null,"original":{"line":125,"column":16},"generated":{"line":121,"column":14}},{"source":"src/index.ts","name":null,"original":{"line":125,"column":19},"generated":{"line":121,"column":17}},{"source":"src/index.ts","name":null,"original":{"line":125,"column":19},"generated":{"line":121,"column":23}},{"source":"src/index.ts","name":null,"original":{"line":125,"column":19},"generated":{"line":121,"column":24}},{"source":"src/index.ts","name":null,"original":{"line":125,"column":23},"generated":{"line":121,"column":28}},{"source":"src/index.ts","name":null,"original":{"line":125,"column":24},"generated":{"line":121,"column":29}},{"source":"src/index.ts","name":null,"original":{"line":125,"column":43},"generated":{"line":121,"column":48}},{"source":"src/index.ts","name":null,"original":{"line":125,"column":45},"generated":{"line":121,"column":50}},{"source":"src/index.ts","name":null,"original":{"line":127,"column":0},"generated":{"line":122,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":127,"column":10},"generated":{"line":122,"column":10}},{"source":"src/index.ts","name":null,"original":{"line":127,"column":11},"generated":{"line":122,"column":11}},{"source":"src/index.ts","name":null,"original":{"line":127,"column":13},"generated":{"line":122,"column":13}},{"source":"src/index.ts","name":null,"original":{"line":127,"column":14},"generated":{"line":122,"column":14}},{"source":"src/index.ts","name":null,"original":{"line":127,"column":22},"generated":{"line":122,"column":22}},{"source":"src/index.ts","name":null,"original":{"line":127,"column":24},"generated":{"line":122,"column":24}},{"source":"src/index.ts","name":null,"original":{"line":127,"column":24},"generated":{"line":122,"column":36}},{"source":"src/index.ts","name":null,"original":{"line":128,"column":2},"generated":{"line":123,"column":2}},{"source":"src/index.ts","name":null,"original":{"line":128,"column":9},"generated":{"line":123,"column":9}},{"source":"src/index.ts","name":null,"original":{"line":128,"column":10},"generated":{"line":123,"column":10}},{"source":"src/index.ts","name":null,"original":{"line":128,"column":13},"generated":{"line":123,"column":13}},{"source":"src/index.ts","name":null,"original":{"line":128,"column":14},"generated":{"line":123,"column":14}},{"source":"src/index.ts","name":null,"original":{"line":128,"column":24},"generated":{"line":123,"column":24}},{"source":"src/index.ts","name":null,"original":{"line":128,"column":25},"generated":{"line":123,"column":25}},{"source":"src/index.ts","name":null,"original":{"line":129,"column":0},"generated":{"line":124,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":129,"column":1},"generated":{"line":124,"column":1}},{"source":"src/index.ts","name":null,"original":{"line":129,"column":2},"generated":{"line":124,"column":2}},{"source":"src/index.ts","name":null,"original":{"line":131,"column":0},"generated":{"line":125,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":131,"column":10},"generated":{"line":125,"column":10}},{"source":"src/index.ts","name":null,"original":{"line":131,"column":11},"generated":{"line":125,"column":11}},{"source":"src/index.ts","name":null,"original":{"line":131,"column":16},"generated":{"line":125,"column":16}},{"source":"src/index.ts","name":null,"original":{"line":131,"column":18},"generated":{"line":125,"column":18}}],"sources":{"src/index.ts":"console.log('This is Typpie, a Typed Web Framework!')\n\n// import axios, { AxiosResponse } from 'axios';\n//import { Collection } from \"./models/Collection\"\nimport { User/*, UserProps*/ } from \"./models/User\" \n\n/* First approach:\nconst user = new User({ name: 'Fulanito', age: 35});\n\nconsole.info(`User Props: ${user.get('name')}, ${user.get('age')}`);\n\nuser.set({ name: \"Fulanito D'tal\" })\n\nconsole.info(`New User Props: ${user.get('name')}, ${user.get('age')}`);\n\nconst userEmpty = new User({});\n\nconsole.info(`New Empty User Props: ${userEmpty.get('name')}, ${userEmpty.get('age')}`);\n*/\n/*\n-----------------------------------------------------------------\nDoesn't work this way after separating the events to a diff class.\nNow requires user.events.on / .trigger check line: 70.\n-----------------------------------------------------------------\nuser.on('change', () => {\n  console.log('change 0');\n});\nuser.on('change', () => {\n  console.log('change 1');\n});\nuser.on('otherEvent', () => {\n  console.log('otherEvent 0');\n});\n\nuser.trigger('change');\n\nconsole.log(user);\n\nuser.trigger('otherEvent');\n*/\n\n// Install > npm install -g json-server\n// Create and fill file: db.json\n// > json-server -w db.json\n// > npm install axios\n\n/* Examples after installing json-server.\naxios.post('http://localhost:3000/users', {\n  name: 'Nolito',\n  age: 50\n});\n\nconst jsonUser = new User({ id: 19 });\n \njsonUser.fetch();\n\nsetTimeout(() => {\n  console.log(jsonUser);\n}, 1000);\n*/\n/*let marito = {};\naxios.get('http://localhost:3000/users/1').then(user => marito=user);\nconsole.log(marito);*/\n\n/* Before Async and Attributes refactoring:\nconst oldUser = new User({ id: 1 });\noldUser.set({ name: 'Otro won', age: 40 })\noldUser.save();\n\nconst newUser = new User({});\nnewUser.set({ name: 'New won', age: 44 })\nnewUser.save();\n\nnewUser.events.on('change', () => {\n  console.log('change 0');\n});\n\nnewUser.events.on('change', () => {\n  console.log('change 1');\n});\n\nnewUser.events.trigger('change');\n*/\n\n/* FW v2\n\nconst user = new User ({ name: 'Perensejo', age: 0 })\n\nWaay 2 complex:\nuser.sync.save({ name: user.attributes.get('name'), age: user.attributes.get('age')});\n*/\n/*\nconst user = new User ({ age: 40 })\n\nuser.on('change', () => {\n  console.log(user)\n});\n\nuser.set({ name: 'Lemita' });*/\n/*\nconst user = new User ({ id: 1, name: 'New Name', age: 5 })\n\nuser.on('save', () => {\n  console.log(user)\n});\n\nuser.save();*/\n/*\nconst user = User.buildUser({ id: 3 });\n\nuser.on('change', () => {\n  console.log(user);\n});\n\nuser.fetch();\n*/\n\nconst url = 'http://localhost:3000/users'\n\n/*const collection = new Collection<User, UserProps>(\n  url,\n  (json: UserProps) => User.(json)\n);*/\n\nconst collection = User.buildUserCollection();\n\ncollection.on('change', () => {\n  console.log(collection);\n});\n\ncollection.fetch();\n\n\n\n"},"lineCount":null}},"error":null,"hash":"ec63c37d1ddd2417afa096333fc3f39b","cacheData":{"env":{}}}